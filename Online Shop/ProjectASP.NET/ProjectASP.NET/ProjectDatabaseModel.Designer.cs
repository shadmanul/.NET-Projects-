//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_Comments_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.Contact), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.Comment), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_Comments_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.Item), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.Comment), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.Contact), "ContactPaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.ContactPaymentMethod), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.PaymentMethod), "ContactPaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.ContactPaymentMethod), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_Contacts_LoginInfo", "LoginInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.LoginInfo), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectASP.NET.Contact), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_Items_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectASP.NET.Contact), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.Item), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_Items_Contacts1", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.Contact), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.Item), true)]
[assembly: EdmRelationshipAttribute("ProjectASP.NETModel", "FK_ItemImages_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectASP.NET.Item), "ItemImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectASP.NET.ItemImage), true)]

#endregion

namespace ProjectASP.NET
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProjectDatabaseContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProjectDatabaseContext object using the connection string found in the 'ProjectDatabaseContext' section of the application configuration file.
        /// </summary>
        public ProjectDatabaseContext() : base("name=ProjectDatabaseContext", "ProjectDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectDatabaseContext object.
        /// </summary>
        public ProjectDatabaseContext(string connectionString) : base(connectionString, "ProjectDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectDatabaseContext object.
        /// </summary>
        public ProjectDatabaseContext(EntityConnection connection) : base(connection, "ProjectDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactPaymentMethod> ContactPaymentMethods
        {
            get
            {
                if ((_ContactPaymentMethods == null))
                {
                    _ContactPaymentMethods = base.CreateObjectSet<ContactPaymentMethod>("ContactPaymentMethods");
                }
                return _ContactPaymentMethods;
            }
        }
        private ObjectSet<ContactPaymentMethod> _ContactPaymentMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feedback> Feedbacks
        {
            get
            {
                if ((_Feedbacks == null))
                {
                    _Feedbacks = base.CreateObjectSet<Feedback>("Feedbacks");
                }
                return _Feedbacks;
            }
        }
        private ObjectSet<Feedback> _Feedbacks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemImage> ItemImages
        {
            get
            {
                if ((_ItemImages == null))
                {
                    _ItemImages = base.CreateObjectSet<ItemImage>("ItemImages");
                }
                return _ItemImages;
            }
        }
        private ObjectSet<ItemImage> _ItemImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoginInfo> LoginInfos
        {
            get
            {
                if ((_LoginInfos == null))
                {
                    _LoginInfos = base.CreateObjectSet<LoginInfo>("LoginInfos");
                }
                return _LoginInfos;
            }
        }
        private ObjectSet<LoginInfo> _LoginInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethod> PaymentMethods
        {
            get
            {
                if ((_PaymentMethods == null))
                {
                    _PaymentMethods = base.CreateObjectSet<PaymentMethod>("PaymentMethods");
                }
                return _PaymentMethods;
            }
        }
        private ObjectSet<PaymentMethod> _PaymentMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactPaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactPaymentMethods(ContactPaymentMethod contactPaymentMethod)
        {
            base.AddObject("ContactPaymentMethods", contactPaymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Feedbacks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedbacks(Feedback feedback)
        {
            base.AddObject("Feedbacks", feedback);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemImages(ItemImage itemImage)
        {
            base.AddObject("ItemImages", itemImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoginInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoginInfos(LoginInfo loginInfo)
        {
            base.AddObject("LoginInfos", loginInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethods(PaymentMethod paymentMethod)
        {
            base.AddObject("PaymentMethods", paymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="commentMessage">Initial value of the CommentMessage property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static Comment CreateComment(global::System.Int32 commentID, global::System.String username, global::System.Int32 itemID, global::System.String commentMessage, global::System.DateTime time)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            comment.Username = username;
            comment.ItemID = itemID;
            comment.CommentMessage = commentMessage;
            comment.Time = time;
            return comment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentMessage
        {
            get
            {
                return _CommentMessage;
            }
            set
            {
                OnCommentMessageChanging(value);
                ReportPropertyChanging("CommentMessage");
                _CommentMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentMessage");
                OnCommentMessageChanged();
            }
        }
        private global::System.String _CommentMessage;
        partial void OnCommentMessageChanging(global::System.String value);
        partial void OnCommentMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Comments_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Comments_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Comments_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Comments_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("ProjectASP.NETModel.FK_Comments_Contacts", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Comments_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_Comments_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_Comments_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_Comments_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("ProjectASP.NETModel.FK_Comments_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="maritalStatus">Initial value of the MaritalStatus property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="lastname">Initial value of the Lastname property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Contact CreateContact(global::System.String username, global::System.String gender, global::System.String maritalStatus, global::System.String firstname, global::System.String lastname, global::System.String email, global::System.String address, global::System.String city, global::System.String country)
        {
            Contact contact = new Contact();
            contact.Username = username;
            contact.Gender = gender;
            contact.MaritalStatus = maritalStatus;
            contact.Firstname = firstname;
            contact.Lastname = lastname;
            contact.Email = email;
            contact.Address = address;
            contact.City = city;
            contact.Country = country;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MaritalStatus
        {
            get
            {
                return _MaritalStatus;
            }
            set
            {
                OnMaritalStatusChanging(value);
                ReportPropertyChanging("MaritalStatus");
                _MaritalStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaritalStatus");
                OnMaritalStatusChanged();
            }
        }
        private global::System.String _MaritalStatus;
        partial void OnMaritalStatusChanging(global::System.String value);
        partial void OnMaritalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Middlename
        {
            get
            {
                return _Middlename;
            }
            set
            {
                OnMiddlenameChanging(value);
                ReportPropertyChanging("Middlename");
                _Middlename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Middlename");
                OnMiddlenameChanged();
            }
        }
        private global::System.String _Middlename;
        partial void OnMiddlenameChanging(global::System.String value);
        partial void OnMiddlenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageContentType
        {
            get
            {
                return _ImageContentType;
            }
            set
            {
                OnImageContentTypeChanging(value);
                ReportPropertyChanging("ImageContentType");
                _ImageContentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageContentType");
                OnImageContentTypeChanged();
            }
        }
        private global::System.String _ImageContentType;
        partial void OnImageContentTypeChanging(global::System.String value);
        partial void OnImageContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageBytes
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageBytes);
            }
            set
            {
                OnImageBytesChanging(value);
                ReportPropertyChanging("ImageBytes");
                _ImageBytes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageBytes");
                OnImageBytesChanged();
            }
        }
        private global::System.Byte[] _ImageBytes;
        partial void OnImageBytesChanging(global::System.Byte[] value);
        partial void OnImageBytesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Comments_Contacts", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ProjectASP.NETModel.FK_Comments_Contacts", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ProjectASP.NETModel.FK_Comments_Contacts", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_Contacts", "ContactPaymentMethod")]
        public EntityCollection<ContactPaymentMethod> ContactPaymentMethods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "ContactPaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "ContactPaymentMethod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Contacts_LoginInfo", "LoginInfo")]
        public LoginInfo LoginInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoginInfo>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "LoginInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoginInfo>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "LoginInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoginInfo> LoginInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoginInfo>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "LoginInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoginInfo>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "LoginInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Items_Contacts", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("ProjectASP.NETModel.FK_Items_Contacts", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("ProjectASP.NETModel.FK_Items_Contacts", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Items_Contacts1", "Item")]
        public EntityCollection<Item> Items1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("ProjectASP.NETModel.FK_Items_Contacts1", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("ProjectASP.NETModel.FK_Items_Contacts1", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="ContactPaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactPaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactPaymentMethod object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="expiryDate">Initial value of the ExpiryDate property.</param>
        public static ContactPaymentMethod CreateContactPaymentMethod(global::System.String username, global::System.String paymentMethod, global::System.String cardNumber, global::System.DateTime expiryDate)
        {
            ContactPaymentMethod contactPaymentMethod = new ContactPaymentMethod();
            contactPaymentMethod.Username = username;
            contactPaymentMethod.PaymentMethod = paymentMethod;
            contactPaymentMethod.CardNumber = cardNumber;
            contactPaymentMethod.ExpiryDate = expiryDate;
            return contactPaymentMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                if (_PaymentMethod != value)
                {
                    OnPaymentMethodChanging(value);
                    ReportPropertyChanging("PaymentMethod");
                    _PaymentMethod = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PaymentMethod");
                    OnPaymentMethodChanged();
                }
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private global::System.DateTime _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.DateTime value);
        partial void OnExpiryDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("ProjectASP.NETModel.FK_ContactPaymentMethod_Contacts", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod")]
        public PaymentMethod PaymentMethod1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethod> PaymentMethod1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "PaymentMethod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="Feedback")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feedback : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feedback object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static Feedback CreateFeedback(global::System.Int32 id, global::System.String subject, global::System.String message, global::System.DateTime time, global::System.String username)
        {
            Feedback feedback = new Feedback();
            feedback.Id = id;
            feedback.Subject = subject;
            feedback.Message = message;
            feedback.Time = time;
            feedback.Username = username;
            return feedback;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="sellerUsername">Initial value of the SellerUsername property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="itemTitle">Initial value of the ItemTitle property.</param>
        /// <param name="itemDescription">Initial value of the ItemDescription property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static Item CreateItem(global::System.Int32 itemID, global::System.String sellerUsername, global::System.String category, global::System.Double price, global::System.String itemTitle, global::System.String itemDescription, global::System.String location)
        {
            Item item = new Item();
            item.ItemID = itemID;
            item.SellerUsername = sellerUsername;
            item.Category = category;
            item.Price = price;
            item.ItemTitle = itemTitle;
            item.ItemDescription = itemDescription;
            item.Location = location;
            return item;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerUsername
        {
            get
            {
                return _BuyerUsername;
            }
            set
            {
                OnBuyerUsernameChanging(value);
                ReportPropertyChanging("BuyerUsername");
                _BuyerUsername = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerUsername");
                OnBuyerUsernameChanged();
            }
        }
        private global::System.String _BuyerUsername;
        partial void OnBuyerUsernameChanging(global::System.String value);
        partial void OnBuyerUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SellerUsername
        {
            get
            {
                return _SellerUsername;
            }
            set
            {
                OnSellerUsernameChanging(value);
                ReportPropertyChanging("SellerUsername");
                _SellerUsername = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SellerUsername");
                OnSellerUsernameChanged();
            }
        }
        private global::System.String _SellerUsername;
        partial void OnSellerUsernameChanging(global::System.String value);
        partial void OnSellerUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTitle
        {
            get
            {
                return _ItemTitle;
            }
            set
            {
                OnItemTitleChanging(value);
                ReportPropertyChanging("ItemTitle");
                _ItemTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTitle");
                OnItemTitleChanged();
            }
        }
        private global::System.String _ItemTitle;
        partial void OnItemTitleChanging(global::System.String value);
        partial void OnItemTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemDescription
        {
            get
            {
                return _ItemDescription;
            }
            set
            {
                OnItemDescriptionChanging(value);
                ReportPropertyChanging("ItemDescription");
                _ItemDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemDescription");
                OnItemDescriptionChanged();
            }
        }
        private global::System.String _ItemDescription;
        partial void OnItemDescriptionChanging(global::System.String value);
        partial void OnItemDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Posted
        {
            get
            {
                return _Posted;
            }
            set
            {
                OnPostedChanging(value);
                ReportPropertyChanging("Posted");
                _Posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posted");
                OnPostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Posted;
        partial void OnPostedChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Comments_Items", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ProjectASP.NETModel.FK_Comments_Items", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ProjectASP.NETModel.FK_Comments_Items", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Items_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Items_Contacts1", "Contact")]
        public Contact Contact1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts1", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts1", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> Contact1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts1", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("ProjectASP.NETModel.FK_Items_Contacts1", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ItemImages_Items", "ItemImage")]
        public EntityCollection<ItemImage> ItemImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemImage>("ProjectASP.NETModel.FK_ItemImages_Items", "ItemImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemImage>("ProjectASP.NETModel.FK_ItemImages_Items", "ItemImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="ItemImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemImage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="imageBytes">Initial value of the ImageBytes property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        public static ItemImage CreateItemImage(global::System.Int32 id, global::System.String contentType, global::System.Byte[] imageBytes, global::System.Int32 itemID)
        {
            ItemImage itemImage = new ItemImage();
            itemImage.ID = id;
            itemImage.ContentType = contentType;
            itemImage.ImageBytes = imageBytes;
            itemImage.ItemID = itemID;
            return itemImage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageBytes
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageBytes);
            }
            set
            {
                OnImageBytesChanging(value);
                ReportPropertyChanging("ImageBytes");
                _ImageBytes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageBytes");
                OnImageBytesChanged();
            }
        }
        private global::System.Byte[] _ImageBytes;
        partial void OnImageBytesChanging(global::System.Byte[] value);
        partial void OnImageBytesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ItemImages_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_ItemImages_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_ItemImages_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ProjectASP.NETModel.FK_ItemImages_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("ProjectASP.NETModel.FK_ItemImages_Items", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="LoginInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoginInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoginInfo object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static LoginInfo CreateLoginInfo(global::System.String username, global::System.String password, global::System.String status)
        {
            LoginInfo loginInfo = new LoginInfo();
            loginInfo.Username = username;
            loginInfo.Password = password;
            loginInfo.Status = status;
            return loginInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_Contacts_LoginInfo", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("ProjectASP.NETModel.FK_Contacts_LoginInfo", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="PaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMethod object.
        /// </summary>
        /// <param name="method">Initial value of the Method property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PaymentMethod CreatePaymentMethod(global::System.String method, global::System.String description)
        {
            PaymentMethod paymentMethod = new PaymentMethod();
            paymentMethod.Method = method;
            paymentMethod.Description = description;
            return paymentMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                if (_Method != value)
                {
                    OnMethodChanging(value);
                    ReportPropertyChanging("Method");
                    _Method = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Method");
                    OnMethodChanged();
                }
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectASP.NETModel", "FK_ContactPaymentMethod_PaymentMethods", "ContactPaymentMethod")]
        public EntityCollection<ContactPaymentMethod> ContactPaymentMethods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "ContactPaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPaymentMethod>("ProjectASP.NETModel.FK_ContactPaymentMethod_PaymentMethods", "ContactPaymentMethod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectASP.NETModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
